{
   "$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
   "contentVersion":"1.0.0.0",
   "parameters":{
      "adminUsername":{
         "type":"string",
         "defaultValue":"edicos",
         "minLength":1,
         "metadata":{
            "description":"Admin username for the Virtual Machine."
         }
      },
      "sshKeyData":{
         "type":"string",
         "defaultValue":"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC58pZQcyTxM4CnTtnMyV6cXypzTa43l67eo8UvW/mWf8GTbQkpt+bOsdCGl7k1wSPWKOQJC+vU1dVqPRhfz4cpY2ohV4UXg3ZO9i4aJv4gJFPPjG/cElM7/QP4z2R6o/BvwfBef5hR7LQtP7WyHhJO3RxeV44UGsxXDVAiX2nPKBqGlgg69SNfQVR+U0ddUljriT5BBWRdvyl5kFsHUvh8N5GxEFwKSX1znB84aJocwFNLzEIgOYkIPgB+YRXtcfRen1t+4SLG7ckro72yC6Dm918131ZGmYbnUEOK7n2azEt0rOZ9nYSPEMv40dSshdI5qRt9E2J5FNpcqvvKNF5+ktWXIRKA/acBgrXb3KjTfUJEZrcxnOvBninjz04puZ8c0kQQwJbj1AEjXN4hb1Zcltgi3VLtKrKxDF0s+j0XJMcSALrzt7PPDkcEoCDLMlZhlWeN2Q8Q8qFeHIqJUJlQQZLdQe/bNINGM5KF4bZE3O4fWpGeNwxcSx6J3DB/NEvwHKn4cCqRlVUCZjsa/XcRK51y9iWwcNIujbqIszyGgYMijs25P14L8sNrgwMIE0BixrA/8iLikTAi0WvMQEDNxbGoShn+GckrO0tRWygPG03Qn2VLWs9SbHauNxutNouwqoS3l141qQp/glQzWYMphtcd8ySYK/sKqW4wuXIWpQ== sascha@vboxmanjaro",
         "metadata":{
            "description":"SSH RSA public key file as a string. Passphrase is stored in vault.intern.edicos.de"
         }
      },
      "vmName":{
         "type":"String",
         "defaultValue":"microcksedicos",
         "minLength":1,
         "metadata":{
            "description":"Name for the Microcks VM."
         }
      },
      "microcksVersion":{
         "type":"string",
         "defaultValue":"latest",
         "metadata":{
            "description":"Microcks version tag for installation (default to latest)"
         }
      }
   },
   "variables":{
      "baseTemplateUrl":"https://raw.githubusercontent.com/Extern-Sascha-Pfau/microcks-azure-install-template/master/",
      "storageAccounts_microcksdiag_name":"[concat(parameters('vmName'), 'diag')]",
      "networkInterfaces_microcks967_name":"[concat(parameters('vmName'), '967')]",
      "publicIPAddresses_microcks_ip_name":"[concat(parameters('vmName'), '-ip')]",
      "virtualNetworks_microcks_vnet_name":"[concat(parameters('vmName'), '-vnet')]",
      "networkSecurityGroups_microcks_nsg_name":"[concat(parameters('vmName'), '-nsg')]",
      "subnets_default_name":"default",
      "securityRules_SSH_name":"SSH",
      "securityRules_Port_8080_name":"Port_8080",
      "securityRules_Port_8180_name":"Port_8180",
      "securityRules_Port_8543_name":"Port_8543"
   },
   "resources":[
      {
         "type":"Microsoft.Compute/virtualMachines",
         "name":"[parameters('vmName')]",
         "apiVersion":"2018-06-01",
         "location":"[resourceGroup().location]",
         "tags":{
            
         },
         "scale":null,
         "properties":{
            "hardwareProfile":{
               "vmSize":"Standard_B2s"
            },
            "storageProfile":{
               "imageReference":{
                  "publisher":"Canonical",
                  "offer":"UbuntuServer",
                  "sku":"18.04-LTS",
                  "version":"latest"
               },
               "osDisk":{
                  "osType":"Linux",
                  "name":"osdisk",
                  "createOption":"FromImage",
                  "caching":"ReadWrite"
               },
               "dataDisks":[
                  
               ]
            },
            "osProfile":{
               "computerName":"[parameters('vmName')]",
               "adminUsername":"[parameters('adminUsername')]",
               "linuxConfiguration":{
                  "disablePasswordAuthentication":true,
                  "ssh":{
                     "publicKeys":[
                        {
                           "path":"[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
                           "keyData":"[parameters('sshKeyData')]"
                        }
                     ]
                  },
                  "provisionVMAgent":true
               },
               "secrets":[
                  
               ],
               "allowExtensionOperations":true
            },
            "networkProfile":{
               "networkInterfaces":[
                  {
                     "id":"[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaces_microcks967_name'))]"
                  }
               ]
            },
            "diagnosticsProfile":{
               "bootDiagnostics":{
                  "enabled":true,
                  "storageUri":"[concat('https', '://', variables('storageAccounts_microcksdiag_name'), '.blob.core.windows.net', '/')]"
               }
            }
         },
         "dependsOn":[
            "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaces_microcks967_name'))]",
            "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccounts_microcksdiag_name'))]"
         ]
      },
      {
         "type":"Microsoft.Compute/virtualMachines/extensions",
         "name":"[concat(parameters('vmName'), '/installcustomscript')]",
         "apiVersion":"2018-04-01",
         "location":"[resourceGroup().location]",
         "dependsOn":[
            "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
         ],
         "properties":{
            "publisher":"Microsoft.OSTCExtensions",
            "type":"CustomScriptForLinux",
            "typeHandlerVersion":"1.5",
            "settings":{
               "fileUris":[
                  "[concat(variables('baseTemplateUrl'), 'azure-demo-setup.sh')]"
               ],
               "commandToExecute":"[concat('sh azure-demo-setup.sh ', reference(variables('publicIPAddresses_microcks_ip_name')).dnsSettings.fqdn, ' ', parameters('microcksVersion'))]"
            }
         }
      },
      {
         "type":"Microsoft.Network/networkInterfaces",
         "name":"[variables('networkInterfaces_microcks967_name')]",
         "apiVersion":"2018-02-01",
         "location":"[resourceGroup().location]",
         "tags":{
            
         },
         "scale":null,
         "properties":{
            "ipConfigurations":[
               {
                  "name":"ipconfig1",
                  "properties":{
                     "privateIPAllocationMethod":"Dynamic",
                     "publicIPAddress":{
                        "id":"[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddresses_microcks_ip_name'))]"
                     },
                     "subnet":{
                        "id":"[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworks_microcks_vnet_name'), variables('subnets_default_name'))]"
                     },
                     "primary":true,
                     "privateIPAddressVersion":"IPv4"
                  }
               }
            ],
            "dnsSettings":{
               "dnsServers":[
                  
               ],
               "appliedDnsServers":[
                  
               ]
            },
            "enableAcceleratedNetworking":false,
            "enableIPForwarding":false,
            "networkSecurityGroup":{
               "id":"[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroups_microcks_nsg_name'))]"
            },
            "primary":true
         },
         "dependsOn":[
            "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddresses_microcks_ip_name'))]",
            "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworks_microcks_vnet_name'), variables('subnets_default_name'))]",
            "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroups_microcks_nsg_name'))]"
         ]
      },
      {
         "type":"Microsoft.Network/networkSecurityGroups",
         "name":"[variables('networkSecurityGroups_microcks_nsg_name')]",
         "apiVersion":"2018-02-01",
         "location":"[resourceGroup().location]",
         "tags":{
            
         },
         "scale":null,
         "properties":{
            "securityRules":[
               {
                  "name":"SSH",
                  "properties":{
                     "protocol":"TCP",
                     "sourcePortRange":"*",
                     "destinationPortRange":"22",
                     "sourceAddressPrefix":"*",
                     "destinationAddressPrefix":"*",
                     "access":"Allow",
                     "priority":300,
                     "direction":"Inbound",
                     "sourcePortRanges":[
                        
                     ],
                     "destinationPortRanges":[
                        
                     ],
                     "sourceAddressPrefixes":[
                        
                     ],
                     "destinationAddressPrefixes":[
                        
                     ]
                  }
               },
               {
                  "name":"Port_8080",
                  "properties":{
                     "protocol":"TCP",
                     "sourcePortRange":"*",
                     "destinationPortRange":"8080",
                     "sourceAddressPrefix":"*",
                     "destinationAddressPrefix":"*",
                     "access":"Allow",
                     "priority":310,
                     "direction":"Inbound",
                     "sourcePortRanges":[
                        
                     ],
                     "destinationPortRanges":[
                        
                     ],
                     "sourceAddressPrefixes":[
                        
                     ],
                     "destinationAddressPrefixes":[
                        
                     ]
                  }
               },
               {
                  "name":"Port_8180",
                  "properties":{
                     "protocol":"TCP",
                     "sourcePortRange":"*",
                     "destinationPortRange":"8180",
                     "sourceAddressPrefix":"*",
                     "destinationAddressPrefix":"*",
                     "access":"Allow",
                     "priority":320,
                     "direction":"Inbound",
                     "sourcePortRanges":[
                        
                     ],
                     "destinationPortRanges":[
                        
                     ],
                     "sourceAddressPrefixes":[
                        
                     ],
                     "destinationAddressPrefixes":[
                        
                     ]
                  }
               },
                    {
                        "name": "Port_8543",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "8543",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 330,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
            ],
            "defaultSecurityRules":[
               {
                  "name":"AllowVnetInBound",
                  "properties":{
                     "description":"Allow inbound traffic from all VMs in VNET",
                     "protocol":"*",
                     "sourcePortRange":"*",
                     "destinationPortRange":"*",
                     "sourceAddressPrefix":"VirtualNetwork",
                     "destinationAddressPrefix":"VirtualNetwork",
                     "access":"Allow",
                     "priority":65000,
                     "direction":"Inbound",
                     "sourcePortRanges":[
                        
                     ],
                     "destinationPortRanges":[
                        
                     ],
                     "sourceAddressPrefixes":[
                        
                     ],
                     "destinationAddressPrefixes":[
                        
                     ]
                  }
               },
               {
                  "name":"AllowAzureLoadBalancerInBound",
                  "properties":{
                     "description":"Allow inbound traffic from azure load balancer",
                     "protocol":"*",
                     "sourcePortRange":"*",
                     "destinationPortRange":"*",
                     "sourceAddressPrefix":"AzureLoadBalancer",
                     "destinationAddressPrefix":"*",
                     "access":"Allow",
                     "priority":65001,
                     "direction":"Inbound",
                     "sourcePortRanges":[
                        
                     ],
                     "destinationPortRanges":[
                        
                     ],
                     "sourceAddressPrefixes":[
                        
                     ],
                     "destinationAddressPrefixes":[
                        
                     ]
                  }
               },
               {
                  "name":"DenyAllInBound",
                  "properties":{
                     "description":"Deny all inbound traffic",
                     "protocol":"*",
                     "sourcePortRange":"*",
                     "destinationPortRange":"*",
                     "sourceAddressPrefix":"*",
                     "destinationAddressPrefix":"*",
                     "access":"Deny",
                     "priority":65500,
                     "direction":"Inbound",
                     "sourcePortRanges":[
                        
                     ],
                     "destinationPortRanges":[
                        
                     ],
                     "sourceAddressPrefixes":[
                        
                     ],
                     "destinationAddressPrefixes":[
                        
                     ]
                  }
               },
               {
                  "name":"AllowVnetOutBound",
                  "properties":{
                     "description":"Allow outbound traffic from all VMs to all VMs in VNET",
                     "protocol":"*",
                     "sourcePortRange":"*",
                     "destinationPortRange":"*",
                     "sourceAddressPrefix":"VirtualNetwork",
                     "destinationAddressPrefix":"VirtualNetwork",
                     "access":"Allow",
                     "priority":65000,
                     "direction":"Outbound",
                     "sourcePortRanges":[
                        
                     ],
                     "destinationPortRanges":[
                        
                     ],
                     "sourceAddressPrefixes":[
                        
                     ],
                     "destinationAddressPrefixes":[
                        
                     ]
                  }
               },
               {
                  "name":"AllowInternetOutBound",
                  "properties":{
                     "description":"Allow outbound traffic from all VMs to Internet",
                     "protocol":"*",
                     "sourcePortRange":"*",
                     "destinationPortRange":"*",
                     "sourceAddressPrefix":"*",
                     "destinationAddressPrefix":"Internet",
                     "access":"Allow",
                     "priority":65001,
                     "direction":"Outbound",
                     "sourcePortRanges":[
                        
                     ],
                     "destinationPortRanges":[
                        
                     ],
                     "sourceAddressPrefixes":[
                        
                     ],
                     "destinationAddressPrefixes":[
                        
                     ]
                  }
               },
               {
                  "name":"DenyAllOutBound",
                  "properties":{
                     "description":"Deny all outbound traffic",
                     "protocol":"*",
                     "sourcePortRange":"*",
                     "destinationPortRange":"*",
                     "sourceAddressPrefix":"*",
                     "destinationAddressPrefix":"*",
                     "access":"Deny",
                     "priority":65500,
                     "direction":"Outbound",
                     "sourcePortRanges":[
                        
                     ],
                     "destinationPortRanges":[
                        
                     ],
                     "sourceAddressPrefixes":[
                        
                     ],
                     "destinationAddressPrefixes":[
                        
                     ]
                  }
               }
            ]
         },
         "dependsOn":[
            
         ]
      },
      {
         "type":"Microsoft.Network/publicIPAddresses",
         "sku":{
            "name":"Basic",
            "tier":"Regional"
         },
         "name":"[variables('publicIPAddresses_microcks_ip_name')]",
         "apiVersion":"2018-02-01",
         "location":"[resourceGroup().location]",
         "tags":{
            
         },
         "scale":null,
         "properties":{
            "publicIPAddressVersion":"IPv4",
            "publicIPAllocationMethod":"Static",
            "idleTimeoutInMinutes":4,
            "dnsSettings":{
               "domainNameLabel":"[parameters('vmName')]"
            },
            "ipTags":[
               
            ]
         },
         "dependsOn":[
            
         ]
      },
      {
         "type":"Microsoft.Network/virtualNetworks",
         "name":"[variables('virtualNetworks_microcks_vnet_name')]",
         "apiVersion":"2018-02-01",
         "location":"[resourceGroup().location]",
         "tags":{
            
         },
         "scale":null,
         "properties":{
            "addressSpace":{
               "addressPrefixes":[
                  "10.0.1.0/24"
               ]
            },
            "subnets":[
               {
                  "name":"default",
                  "properties":{
                     "addressPrefix":"10.0.1.0/24"
                  }
               }
            ],
            "virtualNetworkPeerings":[
               
            ],
            "enableDdosProtection":false,
            "enableVmProtection":false
         },
         "dependsOn":[
            
         ]
      },
      {
         "type":"Microsoft.Storage/storageAccounts",
         "sku":{
            "name":"Standard_LRS",
            "tier":"Standard"
         },
         "kind":"Storage",
         "name":"[variables('storageAccounts_microcksdiag_name')]",
         "apiVersion":"2018-07-01",
         "location":"[resourceGroup().location]",
         "tags":{
            
         },
         "scale":null,
         "properties":{
            "networkAcls":{
               "bypass":"AzureServices",
               "virtualNetworkRules":[
                  
               ],
               "ipRules":[
                  
               ],
               "defaultAction":"Allow"
            },
            "supportsHttpsTrafficOnly":false,
            "encryption":{
               "services":{
                  "file":{
                     "enabled":true
                  },
                  "blob":{
                     "enabled":true
                  }
               },
               "keySource":"Microsoft.Storage"
            }
         },
         "dependsOn":[
            
         ]
      },
      {
         "type":"Microsoft.Network/networkSecurityGroups/securityRules",
         "name":"[concat(variables('networkSecurityGroups_microcks_nsg_name'), '/', variables('securityRules_SSH_name'))]",
         "apiVersion":"2018-02-01",
         "scale":null,
         "properties":{
            "protocol":"TCP",
            "sourcePortRange":"*",
            "destinationPortRange":"22",
            "sourceAddressPrefix":"*",
            "destinationAddressPrefix":"*",
            "access":"Allow",
            "priority":300,
            "direction":"Inbound",
            "sourcePortRanges":[
               
            ],
            "destinationPortRanges":[
               
            ],
            "sourceAddressPrefixes":[
               
            ],
            "destinationAddressPrefixes":[
               
            ]
         },
         "dependsOn":[
            "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroups_microcks_nsg_name'))]"
         ]
      },
      {
         "type":"Microsoft.Network/networkSecurityGroups/securityRules",
         "name":"[concat(variables('networkSecurityGroups_microcks_nsg_name'), '/', variables('securityRules_Port_8080_name'))]",
         "apiVersion":"2018-02-01",
         "scale":null,
         "properties":{
            "protocol":"TCP",
            "sourcePortRange":"*",
            "destinationPortRange":"8080",
            "sourceAddressPrefix":"*",
            "destinationAddressPrefix":"*",
            "access":"Allow",
            "priority":310,
            "direction":"Inbound",
            "sourcePortRanges":[
               
            ],
            "destinationPortRanges":[
               
            ],
            "sourceAddressPrefixes":[
               
            ],
            "destinationAddressPrefixes":[
               
            ]
         },
         "dependsOn":[
            "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroups_microcks_nsg_name'))]"
         ]
      },
      {
         "type":"Microsoft.Network/networkSecurityGroups/securityRules",
         "name":"[concat(variables('networkSecurityGroups_microcks_nsg_name'), '/', variables('securityRules_Port_8180_name'))]",
         "apiVersion":"2018-02-01",
         "scale":null,
         "properties":{
            "protocol":"TCP",
            "sourcePortRange":"*",
            "destinationPortRange":"8180",
            "sourceAddressPrefix":"*",
            "destinationAddressPrefix":"*",
            "access":"Allow",
            "priority":320,
            "direction":"Inbound",
            "sourcePortRanges":[
               
            ],
            "destinationPortRanges":[
               
            ],
            "sourceAddressPrefixes":[
               
            ],
            "destinationAddressPrefixes":[
               
            ]
         },
         "dependsOn":[
            "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroups_microcks_nsg_name'))]"
         ]
      },
      {
         "type":"Microsoft.Network/networkSecurityGroups/securityRules",
         "name":"[concat(variables('networkSecurityGroups_microcks_nsg_name'), '/', variables('securityRules_Port_8180_name'))]",
         "apiVersion":"2018-02-01",
         "scale":null,
         "properties":{
            "protocol":"TCP",
            "sourcePortRange":"*",
            "destinationPortRange":"8543",
            "sourceAddressPrefix":"*",
            "destinationAddressPrefix":"*",
            "access":"Allow",
            "priority":330,
            "direction":"Inbound",
            "sourcePortRanges":[
               
            ],
            "destinationPortRanges":[
               
            ],
            "sourceAddressPrefixes":[
               
            ],
            "destinationAddressPrefixes":[
               
            ]
         },
         "dependsOn":[
            "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroups_microcks_nsg_name'))]"
         ]
      },
      {
         "type":"Microsoft.Network/virtualNetworks/subnets",
         "name":"[concat(variables('virtualNetworks_microcks_vnet_name'), '/', variables('subnets_default_name'))]",
         "apiVersion":"2018-02-01",
         "scale":null,
         "properties":{
            "addressPrefix":"10.0.1.0/24"
         },
         "dependsOn":[
            "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworks_microcks_vnet_name'))]"
         ]
      }
   ]
}
